version: 1
deploy:
  steps:
    setupVariables:
      after:
        - aws --version
        - gcloud --version
        - az --version
        - python --version
        - python3 --version
        - git --version
        - npm --version
        - yarn --version
        - node --version
        - pip --version
        - pip2 --version
        - pip3 --version
        - kubectl version --client
        - tfenv --version
        - terraform --version
        - curl -o tfsec -LJO https://github.com/tfsec/tfsec/releases/download/v0.37.1/tfsec-linux-amd64
        - chmod 755 tfsec
        - mv tfsec /opt/
        - tfsec .
    terraformPlan:
      after:
        - pip3 install checkov
        - terraform show -json .tf-plan | jq '.' > tf.json
        - checkov -f tf.json --quiet --skip-check CKV_AZURE_6 --compact --soft-fail
    terraformApply:
      after:
        - echo $ENV0_ORGANIZATION_ID
        - echo $ENV0_ENVIRONMENT_ID
        - echo $ENV0_ENVIRONMENT_NAME
        - echo $ENV0_PROJECT_ID
        - echo $ENV0_DEPLOYMENT_LOG_ID
        - echo $ENV0_WORKSPACE_NAME
        - echo $ENV0_BLUEPRINT_ID
        - echo $ENV0_BLUEPRINT_NAME
destroy:
  onCompletion:
    - echo "destroy-onCompletion!!!"
  steps:
    terraformDestroy:
      after:
        - echo $ENV0_ORGANIZATION_ID
        - echo $ENV0_ENVIRONMENT_ID
        - echo $ENV0_ENVIRONMENT_NAME
        - echo $ENV0_PROJECT_ID
        - echo $ENV0_DEPLOYMENT_LOG_ID
        - echo $ENV0_WORKSPACE_NAME
        - echo $ENV0_BLUEPRINT_ID
        - echo $ENV0_BLUEPRINT_NAME
